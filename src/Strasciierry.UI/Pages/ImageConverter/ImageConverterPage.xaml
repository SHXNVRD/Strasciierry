<Page x:Class="Strasciierry.UI.Pages.ImageConverter.ImageConverterPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:controls="using:CommunityToolkit.WinUI.Controls"
      xmlns:ascii="using:Strasciierry.UI.Controls.AsciiCanvas"
      xmlns:converters="using:Strasciierry.UI.Converters"
      mc:Ignorable="d">

    <Page.Resources>
        <ResourceDictionary>
            <converters:PercentageDisplayConverter x:Key="PercentageDisplayConverter" />
            <converters:FactorConverter x:Key="FactorConverter" />
            <converters:WindowsUiColorToBrushConverter x:Key="WindowsUiColorToBrushConverter" />
            <converters:WindowsUiColorToSystemDrawingColorConverter x:Key="WindowsUiColorToSystemDrawingColorConverter" />
            <converters:StringToFontFamilyConverter x:Key="StringToFontFamilyConverter" />
            <converters:WindowsStyleToDrawingFontStyleConverter x:Key="WindowsStyleToDrawingFontStyleConverter" />
            <converters:FontWeightToDrawingFontStyleConverter x:Key="FontWeightToDrawingFontStyleConverter" />
            <converters:TextDecorationsToFontStyleConverter x:Key="TextDecorationsToFontStyleConverter" />
            <converters:DrawingToolToBooleanConverter x:Key="DrawingToolToBooleanConverter" />

            <Flyout x:Key="FlyoutBackgroundColorPicker">
                <ColorPicker x:Name="BackgroundColorPicker"
                             IsColorChannelTextInputVisible="False"
                             IsColorPreviewVisible="False"
                             IsAlphaEnabled="True"
                             IsAlphaTextInputVisible="False"
                             IsAlphaSliderVisible="True"
                             IsHexInputVisible="True"
                             Color="{x:Bind ViewModel.ArtBackground, Converter={StaticResource WindowsUiColorToSystemDrawingColorConverter}, Mode=TwoWay}" />
            </Flyout>
            <Flyout x:Key="FlyoutForegroundColorPicker">
                <ColorPicker x:Name="ForegroundColorPicker"
                             IsColorChannelTextInputVisible="False"
                             IsColorPreviewVisible="False"
                             IsAlphaEnabled="True"
                             IsAlphaTextInputVisible="False"
                             IsAlphaSliderVisible="True"
                             IsHexInputVisible="True"
                             Color="{x:Bind ViewModel.ArtForeground, Converter={StaticResource WindowsUiColorToSystemDrawingColorConverter}, Mode=TwoWay}" />
            </Flyout>
        </ResourceDictionary>
    </Page.Resources>

    <Grid x:Name="RootContainer">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!-- Верхняя панель  инcтрументов -->
        <Grid Margin="12 0 0 0"
              Grid.Row="0"
              Grid.Column="1">

            <StackPanel Orientation="Horizontal">

                <Button Style="{StaticResource TransperantButtonStyle}"
                        Margin="0 0 5 0"
                        x:Uid="CommandBar_Add_Button"
                        Command="{x:Bind ViewModel.AddCommand}">
                    <FontIcon Glyph="&#xED25;" />

                    <Button.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control"
                                             Key="O" />
                    </Button.KeyboardAccelerators>
                </Button>

                <Button Style="{StaticResource TransperantButtonStyle}"
                        Margin="0 0 5 0"
                        x:Uid="CommandBar_Save_Button"
                        Command="{x:Bind ViewModel.SaveCommand}">
                    <FontIcon Glyph="&#xE74E;" />

                    <Button.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control"
                                             Key="S" />
                    </Button.KeyboardAccelerators>
                </Button>

                <AppBarSeparator />

                <ToggleButton Click="BoldAppBarToggleButton_Click"
                              Background="Transparent"
                              BorderBrush="Transparent"
                              Margin="5 0 5 0"
                              IsChecked="{x:Bind ViewModel.IsBoldChecked, Mode=TwoWay}">
                    <FontIcon Glyph="&#xE8DD;" />
                </ToggleButton>

                <ToggleButton Click="ItalicAppBarToggleButton_Click"
                              Background="Transparent"
                              BorderBrush="Transparent"
                              Margin="0 0 5 0"
                              IsChecked="{x:Bind ViewModel.IsItalicChecked, Mode=TwoWay}">
                    <FontIcon Glyph="&#xE8DB;" />
                </ToggleButton>

                <ToggleButton Click="UnderlineAppBarToggleButton_Click"
                              Background="Transparent"
                              BorderBrush="Transparent"
                              Margin="0 0 5 0"
                              IsChecked="{x:Bind ViewModel.IsUnderlineChecked, Mode=TwoWay}">
                    <FontIcon Glyph="&#xE8DC;" />
                </ToggleButton>

                <ToggleButton Click="StrikeThroughAppBarToggleButton_Click"
                              Background="Transparent"
                              BorderBrush="Transparent"
                              Margin="0 0 5 0"
                              IsChecked="{x:Bind ViewModel.IsStrikeThroughChecked, Mode=TwoWay}">
                    <FontIcon Glyph="&#xEDE0;" />
                </ToggleButton>

                <ComboBox ItemsSource="{x:Bind ViewModel.FilteredFonts}"
                          SelectedItem="{x:Bind ViewModel.FontName, Mode=TwoWay}"
                          IsEditable="False"
                          Margin="0 0 5 0" />

                <ComboBox IsEditable="True"
                          ItemsSource="{x:Bind ViewModel.FontSizes}"
                          SelectedItem="{x:Bind ViewModel.FontSize, Mode=TwoWay}"
                          Margin="0 0 5 0" />
            </StackPanel>
        </Grid>

        <!-- Левая панель  инcтрументов -->
        <Grid Grid.RowSpan="2"
              Grid.Column="0"
              Grid.Row="0"
              VerticalAlignment="Stretch"
              HorizontalAlignment="Center">

            <StackPanel VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Spacing="5">

                <RadioButton Style="{StaticResource LikeToggleButtonStyle}"
                             IsChecked="{x:Bind ViewModel.DrawingTool, Converter={StaticResource DrawingToolToBooleanConverter}, ConverterParameter=Pencil, Mode=TwoWay}">

                    <FontIcon Glyph="&#xE70F;" />

                    <ToggleButton.KeyboardAccelerators>
                        <KeyboardAccelerator Key="B" />
                    </ToggleButton.KeyboardAccelerators>
                </RadioButton>

                <RadioButton Style="{StaticResource LikeToggleButtonStyle}"
                             IsChecked="{x:Bind ViewModel.DrawingTool, Converter={StaticResource DrawingToolToBooleanConverter}, ConverterParameter=Eraser, Mode=TwoWay}">

                    <FontIcon Glyph="&#xE75C;" />

                    <ToggleButton.KeyboardAccelerators>
                        <KeyboardAccelerator Key="E" />
                    </ToggleButton.KeyboardAccelerators>
                </RadioButton>

                <RadioButton Style="{StaticResource LikeToggleButtonStyle}"
                             IsChecked="{x:Bind ViewModel.DrawingTool, Converter={StaticResource DrawingToolToBooleanConverter}, ConverterParameter=Pipette, Mode=TwoWay}">

                    <FontIcon Glyph="&#xEF3C;" />

                    <ToggleButton.KeyboardAccelerators>
                        <KeyboardAccelerator Key="I" />
                    </ToggleButton.KeyboardAccelerators>
                </RadioButton>

                <RadioButton Style="{StaticResource LikeToggleButtonStyle}"
                             IsChecked="{x:Bind ViewModel.DrawingTool, Converter={StaticResource DrawingToolToBooleanConverter}, ConverterParameter=Selection, Mode=TwoWay}">

                    <FontIcon Glyph="&#xE739;" />

                    <RadioButton.KeyboardAccelerators>
                        <KeyboardAccelerator Key="W" />
                    </RadioButton.KeyboardAccelerators>
                </RadioButton>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="1"
              Grid.Column="1">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0.3*" />
            </Grid.ColumnDefinitions>

            <Grid Margin="6 12 12 12"
                  Background="{StaticResource LayerFillColorAltBrush}"
                  CornerRadius="8">

                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <!--
                <Border CornerRadius="5"
                        Background="{Binding ElementName=BackgroundColorPicker, Path=Color, Converter={StaticResource WindowsUiColorToBrushConverter}}">
                    <ScrollViewer Style="{StaticResource ScrollViewerStyle}"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch"
                                  x:Name="ContentScrollViewer">
                        <TextBlock x:Name="ArtTextBlock"
                                   Text="{x:Bind ViewModel.SymbolicArt, Mode=OneWay}"
                                   Foreground="{Binding ElementName=ForegroundColorPicker, Path=Color, Converter={StaticResource WindowsUiColorToBrushConverter}}"
                                   TextWrapping="WrapWholeWords"
                                   FontFamily="{x:Bind ViewModel.FontName, Converter={StaticResource StringToFontFamilyConverter}, Mode=TwoWay}"
                                   IsTextSelectionEnabled="True"
                                   FontSize="{x:Bind ViewModel.FontSize, Mode=TwoWay}"
                                   TextDecorations="{x:Bind ViewModel.TextDecorations, Converter={StaticResource TextDecorationsToFontStyleConverter}, Mode=TwoWay}"
                                   FontWeight="{x:Bind ViewModel.FontWeight, Converter={StaticResource FontWeightToDrawingFontStyleConverter}, Mode=TwoWay}"
                                   FontStyle="{x:Bind ViewModel.FontStyle, Converter={StaticResource WindowsStyleToDrawingFontStyleConverter}, Mode=TwoWay}">
                        </TextBlock>
                    </ScrollViewer>
                </Border>
                -->

                <ascii:AsciiCanvas Rows="50"
                                   Columns="50"
                                   DrawingTool="{x:Bind ViewModel.DrawingTool, Mode=TwoWay}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />

                <!-- Панель статуса -->
                <Grid HorizontalAlignment="Stretch"
                      Grid.Row="1"
                      Height="auto"
                      Margin="0 8 0 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0"
                                Orientation="Horizontal">
                        <TextBlock x:Uid="Converting_StatusBar_FileName" />
                        <TextBlock Text="{x:Bind ViewModel.ImagePath, Mode=OneWay}"
                                   Margin="3 0 0 0" />
                    </StackPanel>
                    <StackPanel Grid.Column="1"
                                Orientation="Horizontal">
                        <TextBlock x:Uid="Converting_StatusBar_ArtRows"
                                   HorizontalAlignment="Right" />
                        <TextBlock Text="{x:Bind ViewModel.Heigh, Mode=OneWay}"
                                   Margin="3 0 0 0"
                                   HorizontalAlignment="Right" />
                        <TextBlock x:Uid="Converting_StatusBar_ArtColumns"
                                   Margin="10 0 0 0"
                                   HorizontalAlignment="Right" />
                        <TextBlock Text="{x:Bind ViewModel.Width, Mode=OneWay}"
                                   Margin="3 0 0 0"
                                   HorizontalAlignment="Right" />
                    </StackPanel>
                </Grid>
            </Grid>

            <!-- Панель натсроек -->
            <StackPanel x:Name="SettingsPanel"
                        Grid.Column="1"
                        Orientation="Vertical"
                        Margin="0 12 0 12"
                        Spacing="5">

                <controls:SettingsCard x:Uid="Converting_Settings_ArtSize"
                                       HorizontalAlignment="Stretch"
                                       HorizontalContentAlignment="Stretch">

                    <Slider x:Name="SizeSlider"
                            IsThumbToolTipEnabled="True"
                            ThumbToolTipValueConverter="{StaticResource PercentageDisplayConverter}"
                            Maximum="100"
                            Minimum="10"
                            StepFrequency="1"
                            Value="{x:Bind ViewModel.SizePercent, Mode=TwoWay}"
                            HorizontalAlignment="Stretch"
                            Width="300">

                    </Slider>
                </controls:SettingsCard>

                <controls:SettingsCard x:Uid="Converting_Settings_HeightReductionFactor"
                                       HorizontalContentAlignment="Stretch"
                                       HorizontalAlignment="Stretch">

                    <Slider x:Name="HeightReductionFactorSlider"
                            HorizontalAlignment="Stretch"
                            ThumbToolTipValueConverter="{StaticResource FactorConverter}"
                            Maximum="10"
                            Minimum="1"
                            StepFrequency="0.1"
                            Value="{x:Bind ViewModel.HeightReductionFactor, Mode=TwoWay}"
                            Width="300">
                    </Slider>
                </controls:SettingsCard>

                <controls:SettingsCard x:Uid="Converting_Settings_Inversion">
                    <controls:SettingsCard.Resources>
                        <x:Double x:Key="SettingsCardWrapThreshold">200</x:Double>
                    </controls:SettingsCard.Resources>

                    <ToggleSwitch HorizontalAlignment="Right"
                                  IsOn="{x:Bind ViewModel.IsNegative, Mode=TwoWay}">
                        <ToolTipService.ToolTip>
                            <ToolTip x:Uid="Converting_Settings_Inversion_ToolTip" />
                        </ToolTipService.ToolTip>
                    </ToggleSwitch>
                </controls:SettingsCard>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock x:Uid="Converting_Settings_Background"
                               Margin="0 0 5 0"
                               Grid.Column="0"
                               VerticalAlignment="Center" />
                    <Button Background="{Binding ElementName=BackgroundColorPicker, Path=Color, Converter={StaticResource WindowsUiColorToBrushConverter}}"
                            Style="{StaticResource ColorSelectorButtonStyle}"
                            Height="40"
                            Width="40"
                            Grid.Column="1"
                            Flyout="{StaticResource FlyoutBackgroundColorPicker}">
                    </Button>

                    <TextBlock x:Uid="Converting_Settings_Foreground"
                               Margin="0 0 5 0"
                               Grid.Column="2"
                               VerticalAlignment="Center" />
                    <Button Background="{Binding ElementName=ForegroundColorPicker, Path=Color, Converter={StaticResource WindowsUiColorToBrushConverter}}"
                            Style="{StaticResource ColorSelectorButtonStyle}"
                            Height="40"
                            Width="40"
                            Grid.Column="3"
                            Flyout="{StaticResource FlyoutForegroundColorPicker}">
                    </Button>
                </Grid>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0"
                            HorizontalAlignment="Stretch"
                            x:Uid="Converting_Settings_Generate"
                            Command="{x:Bind ViewModel.GenerateArtCommand}"
                            Margin="0 0 5 0"
                            Style="{StaticResource AccentButtonStyle}" />

                    <Button Grid.Column="1"
                            x:Uid="Converting_Settings_ResetSettings"
                            HorizontalAlignment="Stretch"
                            Content="Сбросить"
                            Command="{x:Bind ViewModel.ResetSettingsCommand}" />
                </Grid>
            </StackPanel>
        </Grid>
    </Grid>
</Page>
